
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip on;
    gzip_disable "msie6";
    gzip_min_length 1k; 
    gzip_buffers 4 16k; 
    gzip_http_version 1.0;  
    gzip_comp_level 5; 
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png image/x-icon;
    gzip_vary off; 
	
	#上传文件的大小限制  默认1m
    client_max_body_size 300m;
	proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=imgcache:100m inactive=1d max_size=10g;
	
	
	server {
        listen       80;
        server_name  cnhtol.net;

		listen 443 ssl;   #SSL协议访问端口号为443。此处如未添加ssl，可能会造成Nginx无法启动。 api.vip.cnhtol.net/.well-known/pki-validation/fileauth.txt
		ssl_certificate cert/3593062_static.vip.cnhtol.net_nginx/3593062_static.vip.cnhtol.net.pem;   #将domain name.pem替换成您证书的文件名。
		ssl_certificate_key cert/3593062_static.vip.cnhtol.net_nginx/3593062_static.vip.cnhtol.net.key;   #将domain name.key替换成您证书的密钥文件名。
		ssl_session_timeout 5m;
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。
		ssl_prefer_server_ciphers on;   

        #charset koi8-r;
        index index.html;
        #access_log  logs/host.access.log  main;

		root  /usr/local/cnhtol.net;
	    location / {
             try_files $uri $uri/ @router;
             index index.html;
         }

        location @router {
            rewrite ^.*$ /index.html last;
        }
		
       
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        
    }
	
	
	server {
        listen       80;
        server_name  apitest.vip.cnhtol.net;

        #charset koi8-r;
        index index.html;
        #access_log  logs/host.access.log  main;

		root  /usr/local/apitest.vip.cnhtol.net;
	    location / {
             try_files $uri $uri/ @router;
             index index.html;
         }

        location @router {
            rewrite ^.*$ /index.html last;
        }
		
       
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        
    }


	server
   {
        listen       80;
        server_name  static.qq.cnhtol.net;
		
		

		
		
	    root  /usr/local/static/imgs;
		location ~* ^.+\.(js|ico|gif|jpg|jpeg|png|html|htm)$ 
		{ 
			expires 7d;
			proxy_cache imgcache;
			proxy_cache_valid 200 302 1d;
			proxy_cache_valid 404 10m;
			proxy_cache_valid any 1h;
		}
   }

	server
   {
        listen       80;
        server_name  static.vip.cnhtol.net;
		
		listen 443 ssl;   #SSL协议访问端口号为443。此处如未添加ssl，可能会造成Nginx无法启动。 api.vip.cnhtol.net/.well-known/pki-validation/fileauth.txt
		ssl_certificate cert/3593062_static.vip.cnhtol.net_nginx/3593062_static.vip.cnhtol.net.pem;   #将domain name.pem替换成您证书的文件名。
		ssl_certificate_key cert/3593062_static.vip.cnhtol.net_nginx/3593062_static.vip.cnhtol.net.key;   #将domain name.key替换成您证书的密钥文件名。
		ssl_session_timeout 5m;
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。
		ssl_prefer_server_ciphers on;   

		
		
	    root  /usr/local/static/imgs;
		location ~* ^.+\.(js|ico|gif|jpg|jpeg|png|html|htm)$ 
		{ 
			expires 7d;
			proxy_cache imgcache;
			proxy_cache_valid 200 302 1d;
			proxy_cache_valid 404 10m;
			proxy_cache_valid any 1h;
		}
   }


	

	server
   {
        listen       80;
        server_name  statictest.vip.cnhtol.net;
        root  /usr/local/static/imgs;
   }



    server {
        listen       80;
        server_name  minim.vip.cnhtol.net;

        #charset koi8-r;
        index index.html;
        #access_log  logs/host.access.log  main;

		root  /usr/local/minim.vip.cnhtol.net;
	    location / {
             try_files $uri $uri/ @router;
             index index.html;
         }

        location @router {
            rewrite ^.*$ /index.html last;
        }
		
        #location / {
         #   root   html;
         #   index  index.html index.htm;
        #}

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

	server {
        listen       80;
        server_name  minimtest.vip.cnhtol.net;

        #charset koi8-r;
        index index.html;
        #access_log  logs/host.access.log  main;

		root  /usr/local/minimtest.vip.cnhtol.net;
	    location / {
             try_files $uri $uri/ @router;
             index index.html;
         }

        location @router {
            rewrite ^.*$ /index.html last;
        }
		
        #location / {
         #   root   html;
         #   index  index.html index.htm;
        #}

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

	server {
        listen       80;
        server_name  admin.vip.cnhtol.net;

        #charset koi8-r;
        index index.html;
        #access_log  logs/host.access.log  main;

		root  /usr/local/admin.vip.cnhtol.net;
	    location / {
             try_files $uri $uri/ @router;
             index index.html;
         }

        location @router {
            rewrite ^.*$ /index.html last;
        }
		
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }


	server {
        listen       80;
        server_name  admintest.vip.cnhtol.net;

        #charset koi8-r;
        index index.html;
        #access_log  logs/host.access.log  main;

		root  /usr/local/admintest.vip.cnhtol.net;
	    location / {
             try_files $uri $uri/ @router;
             index index.html;
         }

        location @router {
            rewrite ^.*$ /index.html last;
        }
		
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

	server {
		listen 443 ssl;   #SSL协议访问端口号为443。此处如未添加ssl，可能会造成Nginx无法启动。 api.vip.cnhtol.net/.well-known/pki-validation/fileauth.txt
		server_name admin.vip.cnhtol.net;  #将localhost修改为您证书绑定的域名，例如：www.example.com。
		#root html;
		index index.html index.htm;
		ssl_certificate cert/3487677_admin.vip.cnhtol.net_nginx/3487677_admin.vip.cnhtol.net.pem;   #将domain name.pem替换成您证书的文件名。
		ssl_certificate_key cert/3487677_admin.vip.cnhtol.net_nginx/3487677_admin.vip.cnhtol.net.key;   #将domain name.key替换成您证书的密钥文件名。
		ssl_session_timeout 5m;
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。
		ssl_prefer_server_ciphers on;   

		root  /usr/local/admin.vip.cnhtol.net;
	    location / {
             try_files $uri $uri/ @router;
             index index.html;
         }

        location @router {
            rewrite ^.*$ /index.html last;
        }
		
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

	server {
		listen 443 ssl;   #SSL协议访问端口号为443。此处如未添加ssl，可能会造成Nginx无法启动。 api.vip.cnhtol.net/.well-known/pki-validation/fileauth.txt
		server_name admintest.vip.cnhtol.net;  #将localhost修改为您证书绑定的域名，例如：www.example.com。
		#root html;
		index index.html index.htm;
		ssl_certificate cert/3487677_admin.vip.cnhtol.net_nginx/3487677_admin.vip.cnhtol.net.pem;   #将domain name.pem替换成您证书的文件名。
		ssl_certificate_key cert/3487677_admin.vip.cnhtol.net_nginx/3487677_admin.vip.cnhtol.net.key;   #将domain name.key替换成您证书的密钥文件名。
		ssl_session_timeout 5m;
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。
		ssl_prefer_server_ciphers on;   

		root  /usr/local/admintest.vip.cnhtol.net;
	    location / {
             try_files $uri $uri/ @router;
             index index.html;
         }

        location @router {
            rewrite ^.*$ /index.html last;
        }
		
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }


    server {
        listen 443 ssl;   #SSL协议访问端口号为443。此处如未添加ssl，可能会造成Nginx无法启动。 api.vip.cnhtol.net/.well-known/pki-validation/fileauth.txt
		server_name minim.vip.cnhtol.net;  #将localhost修改为您证书绑定的域名，例如：www.example.com。
		#root html;
		index index.html index.htm;
		ssl_certificate cert/3480798_minim.vip.cnhtol.net_nginx/3480798_minim.vip.cnhtol.net.pem;   #将domain name.pem替换成您证书的文件名。
		ssl_certificate_key cert/3480798_minim.vip.cnhtol.net_nginx/3480798_minim.vip.cnhtol.net.key;   #将domain name.key替换成您证书的密钥文件名。
		ssl_session_timeout 5m;
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。
		ssl_prefer_server_ciphers on;   

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

		root  /usr/local/minim.vip.cnhtol.net;
	    location / {
             try_files $uri $uri/ @router;
             index index.html;
         }

        location @router {
            rewrite ^.*$ /index.html last;
        }
    }

	server {
        listen 443 ssl;   #SSL协议访问端口号为443。此处如未添加ssl，可能会造成Nginx无法启动。 api.vip.cnhtol.net/.well-known/pki-validation/fileauth.txt
		server_name minimtest.vip.cnhtol.net;  #将localhost修改为您证书绑定的域名，例如：www.example.com。
		#root html;
		index index.html index.htm;
		ssl_certificate cert/3480798_minim.vip.cnhtol.net_nginx/3480798_minim.vip.cnhtol.net.pem;   #将domain name.pem替换成您证书的文件名。
		ssl_certificate_key cert/3480798_minim.vip.cnhtol.net_nginx/3480798_minim.vip.cnhtol.net.key;   #将domain name.key替换成您证书的密钥文件名。
		ssl_session_timeout 5m;
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。
		ssl_prefer_server_ciphers on;   

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

		root  /usr/local/minimtest.vip.cnhtol.net;
	    location / {
             try_files $uri $uri/ @router;
             index index.html;
         }

        location @router {
            rewrite ^.*$ /index.html last;
        }
    }



    server {
         listen 443 ssl;   #SSL协议访问端口号为443。此处如未添加ssl，可能会造成Nginx无法启动。 api.vip.cnhtol.net/.well-known/pki-validation/fileauth.txt
		server_name api.vip.cnhtol.net;  #将localhost修改为您证书绑定的域名，例如：www.example.com。
		root html;
		index index.html index.htm;
		ssl_certificate cert/5092641_api.vip.cnhtol.net_nginx/5092641_api.vip.cnhtol.net.pem;   #将domain name.pem替换成您证书的文件名。
		ssl_certificate_key cert/5092641_api.vip.cnhtol.net_nginx/5092641_api.vip.cnhtol.net.key;   #将domain name.key替换成您证书的密钥文件名。
		ssl_session_timeout 5m;
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。
		ssl_prefer_server_ciphers on;   

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        location / {
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://127.0.0.1:8080;
		}
		
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


	server {
         listen 443 ssl;   #SSL协议访问端口号为443。此处如未添加ssl，可能会造成Nginx无法启动。 api.vip.cnhtol.net/.well-known/pki-validation/fileauth.txt
		server_name apitest.vip.cnhtol.net;  #将localhost修改为您证书绑定的域名，例如：www.example.com。
		root html;
		index index.html index.htm;
		ssl_certificate cert/3555313_apitest.vip.cnhtol.net_nginx/3555313_apitest.vip.cnhtol.net.pem;   #将domain name.pem替换成您证书的文件名。
		ssl_certificate_key cert/3555313_apitest.vip.cnhtol.net_nginx/3555313_apitest.vip.cnhtol.net.key;   #将domain name.key替换成您证书的密钥文件名。
		ssl_session_timeout 5m;
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。
		ssl_prefer_server_ciphers on;   

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        location / {
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://127.0.0.1:8091;
		}
		
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

	#1. 安装编译安装所需要的依赖
	#
	#yum install -y gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel
	#
	#
	#2.下载Nginx
	#yum install -y wget
	#wget https://nginx.org/download/nginx-1.14.0.tar.gz12
	#
	#3. 解压
	#tar zxf nginx-1.14.0.tar.gz
	#cd nginx-1.14.012
	#
	#4. 编译安装（默认设置）
	#./configure 
	#make && make install
	#
	#5. 查看安装目录
	#whereis nginx
	#nginx: /usr/local/nginx
	#
	#
	#
	#6.启动Nginx
	#cd /usr/local/nginx/sbin
	#./nginx
	#
	#
	#7. 查看Nginx是否运行
	#ps -ef | grep -v grep | grep nginx
	#root      4772     1  0 18:27 ?        00:00:00 nginx: master process ./nginx
	#nobody    4773  4772  0 18:27 ?        00:00:00 nginx: worker process
	#
	#
	#8. 查看Nginx默认监听端口
	#
	#vi /usr/local/nginx/conf/nginx.conf
	#注意：对于编译安装来说，任何对于Nginx配置文件的修改，如想使其生效，必须重载Nginx，使用以下命令：
	#./nginx -s reload
	##
	#
	
	#
	#
	#这个是安装nginx的时候没有开启ssl功能 解决如下
	#1、查看是否开启ssl模块
	#/usr/local/nginx/sbin/nginx -V
	#1
	#正常开启如下图
	#在这里插入图片描述
	#没有开启上图红框框部分为空
	#
	#
	#2、开启ssk模块
	#1、找到你安装的源码包（不是/usr/local/nginx）是那个带有版本号的位置。也就是你安装解压之后的文件
	#2、执行命令
	#
	#./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module
	#1
	#make
	#1
	#3、然后备份原有已安装好的nginx
	#
	#cp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak
	#1
	#4、然后将刚刚编译好的nginx覆盖掉原有的nginx （这个时候nginx要停止状态）
	#
	#关闭nginx命令 : /usr/local/nginx/sbin/nginx -s stop
	#1
	#cp ./objs/nginx /usr/local/nginx/sbin/
	#1
	#5、启动nginx
	#
	#/usr/local/nginx/sbin/nginx
	#1
	#6、查看安装
	#
	#/usr/local/nginx/sbin/nginx -V
	#	
	#	
}
